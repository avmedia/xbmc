case @use_xcode@ in
  3.*.*)
    platform_cc=gcc-4.2
    platform_cpp=cpp-4.2
    platform_cxx=g++-4.2
    ;;
  *)
    platform_cc=llvm-gcc-4.2
    platform_cpp="llvm-gcc-4.2 -E"
    platform_cxx=llvm-g++-4.2
    ;;
esac
platform_gnu=gnu99
platform_gcc_version=4.2
platform_sdk_version=@use_sdk@
platform_min_version="iphoneos-version-min=4.2"

host_alias=arm-apple-darwin10

cross_compiling=yes

platform_path="@use_xcodepath@/Platforms/iPhoneOS.platform/Developer"
platform_os_cflags="-arch @use_arch@ -mcpu=cortex-a8 -mfpu=neon -ftree-vectorize -mfloat-abi=softfp -pipe -Wno-trigraphs -fpascal-strings -O3 -Wreturn-type -Wunused-variable -fmessage-length=0 -gdwarf-2"
platform_os_ldflags="-arch @use_arch@ -mcpu=cortex-a8"
platform_sdk_path=@use_sdk_path@

export NM=${platform_path}/usr/bin/nm
export CPP=${platform_path}/usr/bin/${platform_cpp}
export CXXCPP=${CPP}
export CPPFLAGS="${CPPFLAGS} -no-cpp-precomp -I${prefix}/include -m${platform_min_version} -isysroot ${platform_sdk_path} ${platform_os_cflags}"
export CC=${platform_path}/usr/bin/${platform_cc}
export CFLAGS="${CFLAGS} -std=gnu99 -no-cpp-precomp -m${platform_min_version} -isysroot ${platform_sdk_path} ${platform_os_cflags} -I${platform_sdk_path}/usr/include"
export LD=${platform_path}/usr/bin/ld
export LDFLAGS="${LDFLAGS} -m${platform_min_version} -isysroot ${platform_sdk_path} -L${platform_sdk_path}/usr/lib -L${platform_sdk_path}/usr/lib/system ${platform_os_ldflags} -L${prefix}/lib"
export CXX=${platform_path}/usr/bin/${platform_cxx}
export CXXFLAGS="${CXXFLAGS} -m${platform_min_version} -isysroot ${platform_sdk_path} ${platform_os_cflags}"
export AR=${platform_path}/usr/bin/ar
export AS="@use_toolchain@/bin/gas-preprocessor.pl ${CC}"
export M4=@use_toolchain@/bin/m4
export CCAS="--tag CC @use_toolchain@/bin/gas-preprocessor.pl ${CC}"
export STRIP=${platform_path}/usr/bin/strip
export RANLIB=${platform_path}/usr/bin/ranlib
export SWIG_EXE=@use_toolchain@/bin/swig
export JAVA_EXE=/usr/bin/java
export JAVE_HOME=`/usr/libexec/java_home`
export ACLOCAL="@use_toolchain@/bin/aclocal -I ${prefix}/share/aclocal -I @use_toolchain@/share/aclocal"
export LIBTOOL=@use_toolchain@/bin/glibtool
export LIBTOOLIZE=@use_toolchain@/bin/glibtoolize
export PKG_CONFIG_PATH=${prefix}/lib/pkgconfig:${platform_sdk_path}/usr/lib/pkgconfig
export PATH="@use_toolchain@/bin:${prefix}/bin:${platform_path}/usr/bin:/Developer/usr/bin:${PATH}"
export YASM=@use_toolchain@/bin/yasm

# tweaks for samba
if test "${PACKAGE_NAME}" = "Samba" ; then
  # disable python support
  export PYTHON_VER=0.0
  # ios/osx-10.6 issue with collision of _MD5 exported from a system lib
  export LDFLAGS="${LDFLAGS} -Wl,-unexported_symbol,_MD5* -lc"
  # uses OPT instead of CFLAGS
  export OPT="${CFLAGS}"
  # various configure overrides
  ac_cv_header_libunwind_h=no
  ac_cv_header_execinfo_h=no
  ac_cv_header_rpcsvc_ypclnt_h=no
  ac_cv_file__proc_sys_kernel_core_pattern=no
  libreplace_cv_HAVE_GETADDRINFO=no
  libreplace_cv_HAVE_C99_VSNPRINTF=yes
  samba_cv_SYSCONF_SC_NPROCESSORS_ONLN=no
  samba_cv_CC_NEGATIVE_ENUM_VALUES=yes
fi

# tweaks for python
if test "${PACKAGE_NAME}" = "python" ; then
  export CC="${CC} -arch armv7"
  export LD="${LD} -arch armv7"
  export CPPFLAGS="${CPPFLAGS} -I${platform_sdk_path}/usr/include"
fi

# tweaks for readline
if test "${PACKAGE_NAME}" = "readline" ; then
  ac_cv_header_termcap_h=no
fi

# tweaks for fontconfig
if test "${ac_unique_file}" = "fonts.dtd" ; then
  with_arch=arm
fi

# tweaks for flac
if test "${ac_unique_file}" = "src/flac/main.c" ; then
  # compiler barfs if we use -O3/O2 for flac
  export CFLAGS=`echo ${CFLAGS} | sed 's/-O3/-Os/'`
  export CPPFLAGS=`echo ${CPPFLAGS} | sed 's/-O3/-Os/'`
fi

# tweaks for curl
if test "${PACKAGE_NAME}" = "curl" ; then
  ac_cv_file___dev_urandom_=yes
fi

# tweaks for libmpeg2
if test "${PACKAGE_NAME}" = "libmpeg2" ; then
  export LDFLAGS="${LDFLAGS} -Wl,-read_only_relocs,suppress"
fi

# tweaks for libcdio
if test "${PACKAGE_NAME}" = "libcdio" ; then
  with_cd_drive=no
  with_cd_info=no
  with_cd_read=no
  with_cd_paranoia=no
  with_cdda_player=no
  with_iso_info=no
  with_iso_read=no
fi

# tweaks for libgcrypt
if test "${PACKAGE_NAME}" = "libgcrypt" ; then
  export CFLAGS="${CFLAGS} -fgnu89-inline"
fi

# tweaks for libjpeg-turbo
if test "${PACKAGE_NAME}" = "libjpeg-turbo" ; then
  export CCAS="${AS}"
  export CFLAGS="${CFLAGS} -fexceptions"
fi

# tweaks for libffi (ios must use llvm-gcc-4.2)
if test "${PACKAGE_NAME}" = "libffi" ; then
  export CC="${platform_path}/usr/bin/llvm-gcc-4.2"
  export CPP="${platform_path}/usr/bin/llvm-gcc-4.2 -E"
  unset AS
  unset CCAS
fi
