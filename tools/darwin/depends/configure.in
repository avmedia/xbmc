AC_PREREQ(2.59)
AC_INIT([darwin-depends], [2.00], [http://trac.xbmc.org])

AC_ARG_WITH([darwin],
  [AS_HELP_STRING([--with-darwin],
  [build depend libs for darwin osx (default) or ios.])],
  [use_darwin=$withval],
  [use_darwin=missing])

AC_ARG_WITH([arch],
  [AS_HELP_STRING([--with-arch],
  [build depend libs for arch i386 (default osx), x86_64, ppc or armv7 (default ios).])],
  [use_arch=$withval],)

AC_ARG_WITH([sdk],
  [AS_HELP_STRING([--with-sdk],
  [build depend libs using sdk 10.6 (default osx) or 4.2 (default ios).])],
  [use_sdk=$withval],)

use_staging="/Users/Shared/xbmc-depends"

# find xcodebuild and xcodepath by xcode-select
# else test in Xcode.app, if not there, fall back to normal location
if [[ -f "/usr/bin/xcode-select" ]]; then
  use_xcodepath=`/usr/bin/xcode-select -print-path`
  use_xcodebuild="$use_xcodepath/usr/bin/xcodebuild"
else
  use_xcodepath="/Applications/Xcode.app/Contents/Developer"
  use_xcodebuild="/Applications/Xcode.app/Contents/Developer/usr/bin/xcodebuild"
  if [[ ! -f "$use_xcodebuild" ]]; then
    use_xcodepath="/Developer"
    use_xcodebuild="/usr/bin/xcodebuild"  
  fi
fi
AC_MSG_RESULT(found xcodebuild at $use_xcodebuild)
use_xcode=[`$use_xcodebuild -version | grep Xcode | awk '{ print $2}'`]

OUTPUT_FILES="Makefile Makefile.include"
case $use_darwin in
  osx)
     use_arch="${use_arch:-i386}"
     if test "$use_arch" = "armv7"; then
       AC_MSG_ERROR(error in configure of --with-arch=$use_arch)
     fi
     found_sdk_version=[`$use_xcodebuild -showsdks | grep macosx | sort |  tail -n 1 | grep -oE 'macosx[0-9.0-9]+' | cut -c 7-$NF`]
     use_sdk="${use_sdk:-$found_sdk_version}"
     case $use_sdk in
     10.5);;
     10.6);;
     10.7);;
     10.8);;
     *)
       AC_MSG_ERROR(error in configure of --with-sdk=$use_sdk)
     esac
     sdk_name=macosx$use_sdk
     use_prefix=${use_staging}/${sdk_name}_${use_arch}
     CONFIG_SITE=" [config.site:config.site_osx.in]"
     MK_CONFIG_SITE=" [config.site.mk:config.site_osx.mk.in]"
     ;;
  ios)
     use_arch="${use_arch:-armv7}"
     if test "$use_arch" != "armv7"; then
       AC_MSG_ERROR(error in configure of --with-arch=$use_arch)
     fi
     found_sdk_version=[`$use_xcodebuild -showsdks | grep iphoneos | sort | tail -n 1 | awk '{ print $2}'`]
     use_sdk="${use_sdk:-$found_sdk_version}"
     case $use_sdk in
     4.*);;
     5.*);;
     6.*);;
     *)
       AC_MSG_ERROR(error in configure of --with-sdk=$use_sdk)
     esac
     sdk_name=iphoneos$use_sdk
     use_prefix=${use_staging}/${sdk_name}_${use_arch}
     CONFIG_SITE=" [config.site:config.site_ios.in]"
     MK_CONFIG_SITE=" [config.site.mk:config.site_ios.mk.in]"
     ;;
  *)
     AC_MSG_ERROR([error in configure, missing or incorrect --with-darwin arg])
     ;;
esac

use_sdk_path=[`$use_xcodebuild -version -sdk $sdk_name | grep ^Path | awk '{ print $2}'`]

AC_MSG_RESULT(configuring for darwin $sdk_name)
AC_MSG_RESULT(using the sdk path of $use_sdk_path)
AC_MSG_RESULT(creating hostroot at $use_staging)

OUTPUT_FILES+=${CONFIG_SITE}
OUTPUT_FILES+=${MK_CONFIG_SITE}

use_toolchain=${use_staging}/toolchain
AC_MSG_RESULT(creating build toolchain at $use_toolchain)
mkdir -p ${use_toolchain}

AC_MSG_RESULT(creating tarball storage at $use_staging/tarballs)
mkdir -p ${use_staging}/tarballs

AC_MSG_RESULT(creating hostroot directories at $use_prefix)
mkdir -p ${use_prefix}/bin
mkdir -p ${use_prefix}/lib
mkdir -p ${use_prefix}/slib
mkdir -p ${use_prefix}/share
mkdir -p ${use_prefix}/share/aclocal
mkdir -p ${use_prefix}/include


AC_SUBST(use_xcode)
AC_SUBST(use_xcodepath)

AC_SUBST(use_sdk)
AC_SUBST(use_arch)
AC_SUBST(use_darwin)
AC_SUBST(use_prefix)
AC_SUBST(use_staging)
AC_SUBST(use_sdk_path)
AC_SUBST(use_toolchain)

AC_CONFIG_FILES([${OUTPUT_FILES}])

AC_OUTPUT

AC_MSG_RESULT(setting up config.site files)
cp config.site ${use_prefix}/share/config.site

AC_MSG_RESULT(setting up python26 Makefile)
cp python26/Makefile.${use_darwin} python26/Makefile

